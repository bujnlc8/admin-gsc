name: Build docker & Deploy to remote machines

on:
  push:
    tags: ['release-*.*.*']

jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: yy194131/gsc-admin:${{ env.RELEASE_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: '49.234.18.99'

      - name: Install ansible & Fire
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
          SNOW_SECRET_KEY: ${{secrets.SNOW_SECRET_KEY}}
          SNOW_SQLALCHEMY_DATABASE_URI: ${{secrets.SNOW_SQLALCHEMY_DATABASE_URI}}
        run: |
          ssh-keyscan -H '49.234.18.99' >> ~/.ssh/known_hosts
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          sudo apt install python -y
          sudo pip install ansible==4.8.0 docker==4.4.4
          sudo chmod 755 deploy.sh
          bash deploy.sh
